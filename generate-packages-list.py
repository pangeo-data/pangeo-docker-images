#!/usr/bin/env python3
"""
Generate human readable packages.txt file from a conda-lock file.
"""
import argparse

def parse_lock_line(line):
    """
    Parse a single conda-lock line and return name

    Return name of package with version
    """
    # Given something like this:
    # https://conda.anaconda.org/conda-forge/noarch/nomkl-1.0-h5ca1d4c_0.tar.bz2#9a66894dfd07c4510beb6b3f9672ccc0
    # it should return nomkl, 1.0, h5ca14dc_0

    # Remove hash from the URL
    url = line.split('#', 1)[0]
    # Find last component of URL
    full_pkg = url.rsplit('/', 1)[-1]
    # Full pakage names are of form <pkg-name>-<version>-<build>.
    # Since <pkg-name> can have dashes, use rsplit to split the whole
    # thing into 3 components, starting from the right.
    pkg_name, version, build = full_pkg.rsplit('-', 2)
    return pkg_name, version, build

def main():
    argparser = argparse.ArgumentParser()
    argparser.add_argument('lock_file', help='Path to conda-lock file to parse', default='conda-linux-64.lock')
    args = argparser.parse_args()

    print('# List of packages and versions installed in the environment')
    print(f'# Generated by parsing {args.lock_file}, please use that as source of truth')
    with open(args.lock_file) as f:
        # Skip first four lines, as they only have metadata
        lines = f.readlines()[4:]
        for pkg_name, version, _ in sorted(parse_lock_line(l) for l in lines):
            print(f'{pkg_name}=={version}')

if __name__ == '__main__':
    main()

